{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOClUf+5znSWuV006oPcISt",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/gotserena/project-2022-data-mining/blob/main/missing1\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os \n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "from matplotlib import rcParams\n",
        "import seaborn as sns\n",
        "import sklearn \n",
        "from sklearn.impute import KNNImputer"
      ],
      "metadata": {
        "id": "AdyeWD8BGTdf"
      },
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive   \n",
        "drive.mount('/content/drive')\n",
        "path = '/content/drive/My Drive/project 2023'"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EWk9CaS8OxfN",
        "outputId": "4fca5ecf-3c39-457c-f5da-5c1f252fc058"
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_file_path = os.path.join(path,'330.csv')\n",
        "data= pd.read_csv(data_file_path)    "
      ],
      "metadata": {
        "id": "ilDB6N8rESxx"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "id": "5AAmB2f8GDCS",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "outputId": "2ef7cc42-f437-420b-cad7-e5973c8025c0"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     Sex  AgeSYear  biological age from telomere length  telomere length (kb)  \\\n",
              "0    1.0      32.0                                 62.1                 30.00   \n",
              "1    2.0      20.0                                  5.1                 11.94   \n",
              "2    2.0      21.0                                  6.3                 11.82   \n",
              "3    2.0      20.0                                  7.1                 11.74   \n",
              "4    2.0      22.0                                  9.1                 11.54   \n",
              "..   ...       ...                                  ...                   ...   \n",
              "419  2.0      86.0                                 79.0                  4.55   \n",
              "420  1.0      74.0                                 72.7                  4.54   \n",
              "421  1.0      68.0                                 75.3                  4.28   \n",
              "422  1.0      66.0                                 75.9                  4.22   \n",
              "423  NaN       NaN                                  NaN                   NaN   \n",
              "\n",
              "    DHEAs (BRIA)  Weight  Height   BMI   SMM  Fat Mass  ...   GGT  Glucose  \\\n",
              "0            NaN    62.0   178.0  19.6   NaN       NaN  ...   NaN     89.0   \n",
              "1            108    65.0   177.0  20.7   NaN       NaN  ...   NaN     91.0   \n",
              "2            NaN    51.6   160.0  20.2  20.8      13.8  ...  12.0     77.0   \n",
              "3            NaN    48.0   152.0  20.8  19.5      13.0  ...   NaN     78.0   \n",
              "4            NaN    53.0   161.0  20.4   NaN       NaN  ...   NaN     78.0   \n",
              "..           ...     ...     ...   ...   ...       ...  ...   ...      ...   \n",
              "419          NaN    49.0   154.0  20.7   NaN       NaN  ...  17.0    108.0   \n",
              "420         82.6    61.1   170.0  21.1  28.8       9.5  ...  17.0     83.0   \n",
              "421          NaN    71.2   189.0  19.9  36.5       6.0  ...   9.0     94.0   \n",
              "422          255    80.0   172.0  27.0   NaN       NaN  ...   NaN    103.0   \n",
              "423          NaN     NaN     NaN   NaN   NaN       NaN  ...   NaN      NaN   \n",
              "\n",
              "     HbA1c   AMY7   BUN  Creatinine   LD-P  Uric Acid     CK     GFR  \n",
              "0      5.1    NaN   9.0         1.0    NaN        NaN    NaN  100.15  \n",
              "1      NaN    NaN  16.0         0.8    NaN        3.8    NaN  117.25  \n",
              "2      3.4  127.0  12.0         0.9  494.0        5.4   94.0  112.01  \n",
              "3      NaN    NaN  14.0         0.6    NaN        4.2    NaN  128.89  \n",
              "4      NaN    NaN  14.0         0.8    NaN        5.1    NaN  115.62  \n",
              "..     ...    ...   ...         ...    ...        ...    ...     ...  \n",
              "419    6.2   46.0   9.0         0.7  376.0        5.4   25.0   77.06  \n",
              "420    7.1  131.0  17.0         1.1  290.0        6.2   89.0   72.26  \n",
              "421    4.2  120.0  13.0         0.9  610.0        5.6  355.0   80.51  \n",
              "422    NaN    NaN  14.0         1.1    NaN        5.7    NaN   76.43  \n",
              "423    NaN    NaN   NaN         NaN    NaN        NaN    NaN     NaN  \n",
              "\n",
              "[424 rows x 39 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-dbc8ebe7-0c46-4530-835c-b22c4b75f125\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Sex</th>\n",
              "      <th>AgeSYear</th>\n",
              "      <th>biological age from telomere length</th>\n",
              "      <th>telomere length (kb)</th>\n",
              "      <th>DHEAs (BRIA)</th>\n",
              "      <th>Weight</th>\n",
              "      <th>Height</th>\n",
              "      <th>BMI</th>\n",
              "      <th>SMM</th>\n",
              "      <th>Fat Mass</th>\n",
              "      <th>...</th>\n",
              "      <th>GGT</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>HbA1c</th>\n",
              "      <th>AMY7</th>\n",
              "      <th>BUN</th>\n",
              "      <th>Creatinine</th>\n",
              "      <th>LD-P</th>\n",
              "      <th>Uric Acid</th>\n",
              "      <th>CK</th>\n",
              "      <th>GFR</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>62.1</td>\n",
              "      <td>30.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>62.0</td>\n",
              "      <td>178.0</td>\n",
              "      <td>19.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>89.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>9.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>100.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>11.94</td>\n",
              "      <td>108</td>\n",
              "      <td>65.0</td>\n",
              "      <td>177.0</td>\n",
              "      <td>20.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>91.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>16.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>117.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>6.3</td>\n",
              "      <td>11.82</td>\n",
              "      <td>NaN</td>\n",
              "      <td>51.6</td>\n",
              "      <td>160.0</td>\n",
              "      <td>20.2</td>\n",
              "      <td>20.8</td>\n",
              "      <td>13.8</td>\n",
              "      <td>...</td>\n",
              "      <td>12.0</td>\n",
              "      <td>77.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>127.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>494.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>94.0</td>\n",
              "      <td>112.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>7.1</td>\n",
              "      <td>11.74</td>\n",
              "      <td>NaN</td>\n",
              "      <td>48.0</td>\n",
              "      <td>152.0</td>\n",
              "      <td>20.8</td>\n",
              "      <td>19.5</td>\n",
              "      <td>13.0</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>78.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.0</td>\n",
              "      <td>0.6</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4.2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>128.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>9.1</td>\n",
              "      <td>11.54</td>\n",
              "      <td>NaN</td>\n",
              "      <td>53.0</td>\n",
              "      <td>161.0</td>\n",
              "      <td>20.4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>78.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>115.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>2.0</td>\n",
              "      <td>86.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>4.55</td>\n",
              "      <td>NaN</td>\n",
              "      <td>49.0</td>\n",
              "      <td>154.0</td>\n",
              "      <td>20.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>17.0</td>\n",
              "      <td>108.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>46.0</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>376.0</td>\n",
              "      <td>5.4</td>\n",
              "      <td>25.0</td>\n",
              "      <td>77.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>1.0</td>\n",
              "      <td>74.0</td>\n",
              "      <td>72.7</td>\n",
              "      <td>4.54</td>\n",
              "      <td>82.6</td>\n",
              "      <td>61.1</td>\n",
              "      <td>170.0</td>\n",
              "      <td>21.1</td>\n",
              "      <td>28.8</td>\n",
              "      <td>9.5</td>\n",
              "      <td>...</td>\n",
              "      <td>17.0</td>\n",
              "      <td>83.0</td>\n",
              "      <td>7.1</td>\n",
              "      <td>131.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>290.0</td>\n",
              "      <td>6.2</td>\n",
              "      <td>89.0</td>\n",
              "      <td>72.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>1.0</td>\n",
              "      <td>68.0</td>\n",
              "      <td>75.3</td>\n",
              "      <td>4.28</td>\n",
              "      <td>NaN</td>\n",
              "      <td>71.2</td>\n",
              "      <td>189.0</td>\n",
              "      <td>19.9</td>\n",
              "      <td>36.5</td>\n",
              "      <td>6.0</td>\n",
              "      <td>...</td>\n",
              "      <td>9.0</td>\n",
              "      <td>94.0</td>\n",
              "      <td>4.2</td>\n",
              "      <td>120.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>610.0</td>\n",
              "      <td>5.6</td>\n",
              "      <td>355.0</td>\n",
              "      <td>80.51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>1.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>75.9</td>\n",
              "      <td>4.22</td>\n",
              "      <td>255</td>\n",
              "      <td>80.0</td>\n",
              "      <td>172.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>103.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>14.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5.7</td>\n",
              "      <td>NaN</td>\n",
              "      <td>76.43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>423</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>424 rows × 39 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dbc8ebe7-0c46-4530-835c-b22c4b75f125')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dbc8ebe7-0c46-4530-835c-b22c4b75f125 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dbc8ebe7-0c46-4530-835c-b22c4b75f125');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#data cleansing"
      ],
      "metadata": {
        "id": "yjXwT92hZ_81"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = data.drop(423, axis=0)\n",
        "data = data.drop('DHEAs (BRIA)', axis=1)"
      ],
      "metadata": {
        "id": "JBUwYidgQ0k4"
      },
      "execution_count": 43,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oV90tTgUjQ9G",
        "outputId": "cceaab28-6594-4056-d21b-4c6489dfd679"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(423, 38)"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k1AM-miz-fPL",
        "outputId": "9ff78d1a-ee48-4993-9903-9e5c1ccfde4d"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Sex                                      0\n",
              "AgeSYear                                 0\n",
              "biological age from telomere length      0\n",
              "telomere length (kb)                     0\n",
              "Weight                                   8\n",
              "Height                                   8\n",
              "BMI                                      8\n",
              "SMM                                    225\n",
              "Fat Mass                               225\n",
              "% Body fat                             225\n",
              "abdominal circumference                226\n",
              "waist to hip radio                     225\n",
              "Systolic                                 8\n",
              "Diastolic                                9\n",
              "HeartRate                               51\n",
              "visceral fat area                      225\n",
              "Cholesterol                              0\n",
              "Triglyceride                             0\n",
              "HDL-C                                    0\n",
              "LDL                                      0\n",
              "homocysteine                           292\n",
              "TP1                                    249\n",
              "ALB1                                   249\n",
              "TBIL                                   249\n",
              "DBIL                                   249\n",
              "Alkaline Phos                           29\n",
              "ALT                                      1\n",
              "AST                                      0\n",
              "GGT                                    249\n",
              "Glucose                                  1\n",
              "HbA1c                                  167\n",
              "AMY7                                   249\n",
              "BUN                                      0\n",
              "Creatinine                               0\n",
              "LD-P                                   249\n",
              "Uric Acid                               93\n",
              "CK                                     249\n",
              "GFR                                      0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lLFrRSAQRaE1",
        "outputId": "a868e744-5716-483a-e6ab-7b635b06453d"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 423 entries, 0 to 422\n",
            "Data columns (total 38 columns):\n",
            " #   Column                               Non-Null Count  Dtype  \n",
            "---  ------                               --------------  -----  \n",
            " 0   Sex                                  423 non-null    float64\n",
            " 1   AgeSYear                             423 non-null    float64\n",
            " 2   biological age from telomere length  423 non-null    float64\n",
            " 3   telomere length (kb)                 423 non-null    float64\n",
            " 4   Weight                               415 non-null    float64\n",
            " 5   Height                               415 non-null    float64\n",
            " 6   BMI                                  415 non-null    float64\n",
            " 7   SMM                                  198 non-null    float64\n",
            " 8   Fat Mass                             198 non-null    float64\n",
            " 9   % Body fat                           198 non-null    float64\n",
            " 10  abdominal circumference              197 non-null    float64\n",
            " 11  waist to hip radio                   198 non-null    float64\n",
            " 12  Systolic                             415 non-null    float64\n",
            " 13  Diastolic                            414 non-null    float64\n",
            " 14  HeartRate                            372 non-null    float64\n",
            " 15  visceral fat area                    198 non-null    float64\n",
            " 16  Cholesterol                          423 non-null    float64\n",
            " 17  Triglyceride                         423 non-null    float64\n",
            " 18  HDL-C                                423 non-null    float64\n",
            " 19  LDL                                  423 non-null    float64\n",
            " 20  homocysteine                         131 non-null    float64\n",
            " 21  TP1                                  174 non-null    float64\n",
            " 22  ALB1                                 174 non-null    float64\n",
            " 23  TBIL                                 174 non-null    float64\n",
            " 24  DBIL                                 174 non-null    float64\n",
            " 25  Alkaline Phos                        394 non-null    float64\n",
            " 26  ALT                                  422 non-null    float64\n",
            " 27  AST                                  423 non-null    float64\n",
            " 28  GGT                                  174 non-null    float64\n",
            " 29  Glucose                              422 non-null    float64\n",
            " 30  HbA1c                                256 non-null    float64\n",
            " 31  AMY7                                 174 non-null    float64\n",
            " 32  BUN                                  423 non-null    float64\n",
            " 33  Creatinine                           423 non-null    float64\n",
            " 34  LD-P                                 174 non-null    float64\n",
            " 35  Uric Acid                            330 non-null    float64\n",
            " 36  CK                                   174 non-null    float64\n",
            " 37  GFR                                  423 non-null    float64\n",
            "dtypes: float64(38)\n",
            "memory usage: 128.9 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "imputer = KNNImputer(n_neighbors=8)\n"
      ],
      "metadata": {
        "id": "SnFCmw6vP3am"
      },
      "execution_count": 59,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_filled = imputer.fit_transform(data)\n"
      ],
      "metadata": {
        "id": "qH3yve87P6Of"
      },
      "execution_count": 60,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_filled"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S7sqdcyFRsaO",
        "outputId": "352a8d9d-2672-4719-b69c-95a8755d62ea"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[  1.  ,  32.  ,  62.1 , ...,   6.34, 154.2 , 100.15],\n",
              "       [  2.  ,  20.  ,   5.1 , ...,   3.8 , 102.4 , 117.25],\n",
              "       [  2.  ,  21.  ,   6.3 , ...,   5.4 ,  94.  , 112.01],\n",
              "       ...,\n",
              "       [  1.  ,  74.  ,  72.7 , ...,   6.2 ,  89.  ,  72.26],\n",
              "       [  1.  ,  68.  ,  75.3 , ...,   5.6 , 355.  ,  80.51],\n",
              "       [  1.  ,  66.  ,  75.9 , ...,   5.7 ,  87.6 ,  76.43]])"
            ]
          },
          "metadata": {},
          "execution_count": 56
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.DataFrame(df_filled)"
      ],
      "metadata": {
        "id": "ctFAjp3XS0T3"
      },
      "execution_count": 61,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "q8xqUrFmS-ff",
        "outputId": "40415de6-2c1b-4980-c38d-8ae08d4c69e7"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      0     1     2      3     4      5     6        7        8       9   ...  \\\n",
              "0    1.0  32.0  62.1  30.00  62.0  178.0  19.6  26.5500  15.7875  26.225  ...   \n",
              "1    2.0  20.0   5.1  11.94  65.0  177.0  20.7  24.6375  12.5750  21.625  ...   \n",
              "2    2.0  21.0   6.3  11.82  51.6  160.0  20.2  20.8000  13.8000  26.700  ...   \n",
              "3    2.0  20.0   7.1  11.74  48.0  152.0  20.8  19.5000  13.0000  26.900  ...   \n",
              "4    2.0  22.0   9.1  11.54  53.0  161.0  20.4  20.4375  10.2500  21.675  ...   \n",
              "..   ...   ...   ...    ...   ...    ...   ...      ...      ...     ...  ...   \n",
              "418  2.0  76.0  76.6   4.79  53.8  150.0  23.9  18.6000  19.6000  36.400  ...   \n",
              "419  2.0  86.0  79.0   4.55  49.0  154.0  20.7  24.1250  18.3375  29.550  ...   \n",
              "420  1.0  74.0  72.7   4.54  61.1  170.0  21.1  28.8000   9.5000  15.500  ...   \n",
              "421  1.0  68.0  75.3   4.28  71.2  189.0  19.9  36.5000   6.0000   8.400  ...   \n",
              "422  1.0  66.0  75.9   4.22  80.0  172.0  27.0  26.5125  17.1375  26.200  ...   \n",
              "\n",
              "         28     29      30       31    32   33       34      35       36  \\\n",
              "0    21.250   89.0  5.1000   89.250   9.0  1.0  404.125  6.1625  128.250   \n",
              "1    20.125   91.0  4.8750   89.125  16.0  0.8  392.875  3.8000   92.625   \n",
              "2    12.000   77.0  3.4000  127.000  12.0  0.9  494.000  5.4000   94.000   \n",
              "3    14.125   78.0  4.6250  108.875  14.0  0.6  327.875  4.2000   72.625   \n",
              "4    13.500   78.0  4.0500  107.500  14.0  0.8  336.125  5.1000   62.750   \n",
              "..      ...    ...     ...      ...   ...  ...      ...     ...      ...   \n",
              "418  11.000   86.0  6.2000   99.000  13.0  1.0  373.000  4.4000  102.000   \n",
              "419  17.000  108.0  6.2000   46.000   9.0  0.7  376.000  5.4000   25.000   \n",
              "420  17.000   83.0  7.1000  131.000  17.0  1.1  290.000  6.2000   89.000   \n",
              "421   9.000   94.0  4.2000  120.000  13.0  0.9  610.000  5.6000  355.000   \n",
              "422  21.625  103.0  6.2125  117.250  14.0  1.1  377.250  5.7000  108.875   \n",
              "\n",
              "         37  \n",
              "0    100.15  \n",
              "1    117.25  \n",
              "2    112.01  \n",
              "3    128.89  \n",
              "4    115.62  \n",
              "..      ...  \n",
              "418   73.52  \n",
              "419   77.06  \n",
              "420   72.26  \n",
              "421   80.51  \n",
              "422   76.43  \n",
              "\n",
              "[423 rows x 38 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c53c9c6e-dda0-40b8-b29d-f280c9b0e288\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>28</th>\n",
              "      <th>29</th>\n",
              "      <th>30</th>\n",
              "      <th>31</th>\n",
              "      <th>32</th>\n",
              "      <th>33</th>\n",
              "      <th>34</th>\n",
              "      <th>35</th>\n",
              "      <th>36</th>\n",
              "      <th>37</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.0</td>\n",
              "      <td>32.0</td>\n",
              "      <td>62.1</td>\n",
              "      <td>30.00</td>\n",
              "      <td>62.0</td>\n",
              "      <td>178.0</td>\n",
              "      <td>19.6</td>\n",
              "      <td>26.5500</td>\n",
              "      <td>15.7875</td>\n",
              "      <td>26.225</td>\n",
              "      <td>...</td>\n",
              "      <td>21.250</td>\n",
              "      <td>89.0</td>\n",
              "      <td>5.1000</td>\n",
              "      <td>89.250</td>\n",
              "      <td>9.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>404.125</td>\n",
              "      <td>6.1625</td>\n",
              "      <td>128.250</td>\n",
              "      <td>100.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>5.1</td>\n",
              "      <td>11.94</td>\n",
              "      <td>65.0</td>\n",
              "      <td>177.0</td>\n",
              "      <td>20.7</td>\n",
              "      <td>24.6375</td>\n",
              "      <td>12.5750</td>\n",
              "      <td>21.625</td>\n",
              "      <td>...</td>\n",
              "      <td>20.125</td>\n",
              "      <td>91.0</td>\n",
              "      <td>4.8750</td>\n",
              "      <td>89.125</td>\n",
              "      <td>16.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>392.875</td>\n",
              "      <td>3.8000</td>\n",
              "      <td>92.625</td>\n",
              "      <td>117.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2.0</td>\n",
              "      <td>21.0</td>\n",
              "      <td>6.3</td>\n",
              "      <td>11.82</td>\n",
              "      <td>51.6</td>\n",
              "      <td>160.0</td>\n",
              "      <td>20.2</td>\n",
              "      <td>20.8000</td>\n",
              "      <td>13.8000</td>\n",
              "      <td>26.700</td>\n",
              "      <td>...</td>\n",
              "      <td>12.000</td>\n",
              "      <td>77.0</td>\n",
              "      <td>3.4000</td>\n",
              "      <td>127.000</td>\n",
              "      <td>12.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>494.000</td>\n",
              "      <td>5.4000</td>\n",
              "      <td>94.000</td>\n",
              "      <td>112.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2.0</td>\n",
              "      <td>20.0</td>\n",
              "      <td>7.1</td>\n",
              "      <td>11.74</td>\n",
              "      <td>48.0</td>\n",
              "      <td>152.0</td>\n",
              "      <td>20.8</td>\n",
              "      <td>19.5000</td>\n",
              "      <td>13.0000</td>\n",
              "      <td>26.900</td>\n",
              "      <td>...</td>\n",
              "      <td>14.125</td>\n",
              "      <td>78.0</td>\n",
              "      <td>4.6250</td>\n",
              "      <td>108.875</td>\n",
              "      <td>14.0</td>\n",
              "      <td>0.6</td>\n",
              "      <td>327.875</td>\n",
              "      <td>4.2000</td>\n",
              "      <td>72.625</td>\n",
              "      <td>128.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2.0</td>\n",
              "      <td>22.0</td>\n",
              "      <td>9.1</td>\n",
              "      <td>11.54</td>\n",
              "      <td>53.0</td>\n",
              "      <td>161.0</td>\n",
              "      <td>20.4</td>\n",
              "      <td>20.4375</td>\n",
              "      <td>10.2500</td>\n",
              "      <td>21.675</td>\n",
              "      <td>...</td>\n",
              "      <td>13.500</td>\n",
              "      <td>78.0</td>\n",
              "      <td>4.0500</td>\n",
              "      <td>107.500</td>\n",
              "      <td>14.0</td>\n",
              "      <td>0.8</td>\n",
              "      <td>336.125</td>\n",
              "      <td>5.1000</td>\n",
              "      <td>62.750</td>\n",
              "      <td>115.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>418</th>\n",
              "      <td>2.0</td>\n",
              "      <td>76.0</td>\n",
              "      <td>76.6</td>\n",
              "      <td>4.79</td>\n",
              "      <td>53.8</td>\n",
              "      <td>150.0</td>\n",
              "      <td>23.9</td>\n",
              "      <td>18.6000</td>\n",
              "      <td>19.6000</td>\n",
              "      <td>36.400</td>\n",
              "      <td>...</td>\n",
              "      <td>11.000</td>\n",
              "      <td>86.0</td>\n",
              "      <td>6.2000</td>\n",
              "      <td>99.000</td>\n",
              "      <td>13.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>373.000</td>\n",
              "      <td>4.4000</td>\n",
              "      <td>102.000</td>\n",
              "      <td>73.52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>419</th>\n",
              "      <td>2.0</td>\n",
              "      <td>86.0</td>\n",
              "      <td>79.0</td>\n",
              "      <td>4.55</td>\n",
              "      <td>49.0</td>\n",
              "      <td>154.0</td>\n",
              "      <td>20.7</td>\n",
              "      <td>24.1250</td>\n",
              "      <td>18.3375</td>\n",
              "      <td>29.550</td>\n",
              "      <td>...</td>\n",
              "      <td>17.000</td>\n",
              "      <td>108.0</td>\n",
              "      <td>6.2000</td>\n",
              "      <td>46.000</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.7</td>\n",
              "      <td>376.000</td>\n",
              "      <td>5.4000</td>\n",
              "      <td>25.000</td>\n",
              "      <td>77.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>420</th>\n",
              "      <td>1.0</td>\n",
              "      <td>74.0</td>\n",
              "      <td>72.7</td>\n",
              "      <td>4.54</td>\n",
              "      <td>61.1</td>\n",
              "      <td>170.0</td>\n",
              "      <td>21.1</td>\n",
              "      <td>28.8000</td>\n",
              "      <td>9.5000</td>\n",
              "      <td>15.500</td>\n",
              "      <td>...</td>\n",
              "      <td>17.000</td>\n",
              "      <td>83.0</td>\n",
              "      <td>7.1000</td>\n",
              "      <td>131.000</td>\n",
              "      <td>17.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>290.000</td>\n",
              "      <td>6.2000</td>\n",
              "      <td>89.000</td>\n",
              "      <td>72.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>421</th>\n",
              "      <td>1.0</td>\n",
              "      <td>68.0</td>\n",
              "      <td>75.3</td>\n",
              "      <td>4.28</td>\n",
              "      <td>71.2</td>\n",
              "      <td>189.0</td>\n",
              "      <td>19.9</td>\n",
              "      <td>36.5000</td>\n",
              "      <td>6.0000</td>\n",
              "      <td>8.400</td>\n",
              "      <td>...</td>\n",
              "      <td>9.000</td>\n",
              "      <td>94.0</td>\n",
              "      <td>4.2000</td>\n",
              "      <td>120.000</td>\n",
              "      <td>13.0</td>\n",
              "      <td>0.9</td>\n",
              "      <td>610.000</td>\n",
              "      <td>5.6000</td>\n",
              "      <td>355.000</td>\n",
              "      <td>80.51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>422</th>\n",
              "      <td>1.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>75.9</td>\n",
              "      <td>4.22</td>\n",
              "      <td>80.0</td>\n",
              "      <td>172.0</td>\n",
              "      <td>27.0</td>\n",
              "      <td>26.5125</td>\n",
              "      <td>17.1375</td>\n",
              "      <td>26.200</td>\n",
              "      <td>...</td>\n",
              "      <td>21.625</td>\n",
              "      <td>103.0</td>\n",
              "      <td>6.2125</td>\n",
              "      <td>117.250</td>\n",
              "      <td>14.0</td>\n",
              "      <td>1.1</td>\n",
              "      <td>377.250</td>\n",
              "      <td>5.7000</td>\n",
              "      <td>108.875</td>\n",
              "      <td>76.43</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>423 rows × 38 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c53c9c6e-dda0-40b8-b29d-f280c9b0e288')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c53c9c6e-dda0-40b8-b29d-f280c9b0e288 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c53c9c6e-dda0-40b8-b29d-f280c9b0e288');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.to_csv('data.csv', encoding = 'utf-8')\n"
      ],
      "metadata": {
        "id": "j8qrVcITUBVX"
      },
      "execution_count": 63,
      "outputs": []
    }
  ]
}